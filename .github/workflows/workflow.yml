# name: MasterDeployCI
# on:
#   push:
#     branchs: master
#   pull_request:
#     branches: master
#     types: ["closed"]
# jobs:
#   build:
#     if: github.event.pull_request.merged == true
#     name: push-to-ECR
#     runs-on: ubuntu-latest
#     env:
#       AWS_REGION: ${{ secrets.AWS_REGION }}
#     #   EKS_CLUSTER_NAME: name-eks
#     steps:
#       - uses: actions/checkout@v2
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}
#       - name: Login to ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1
#       - name: Create image tag
#         id: tag
#         run: echo "::set-output name=SHA7::$(echo ${GITHUB_SHA:0:7})"
#       - name: push-to-ECR
#         id: build-image
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY_EXPRESS: ${{ secrets.ECR_REPOSITORY_EXPRESS }}
#           ECR_REPOSITORY_MARIA: ${{ secrets.ECR_REPOSITORY_MARIA }}
#           IMAGE_TAG: ${{ steps.tag.outputs.SHA7 }}
#         run: |
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_EXPRESS:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY_EXPRESS:latest -f ./programmer/Dockerfile.express .
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_MARIA:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY_MARIA:latest -f ./programmer/Dockerfile.maria .
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY_EXPRESS:$IMAGE_TAG
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY_EXPRESS
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY_MARIA:$IMAGE_TAG
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY_MARIA
#       - name: Logout ECR
#         if: always()
#         run: docker logout ${{ steps.login-ecr.outputs.registry }}
